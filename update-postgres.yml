---
- hosts:
    - perun_servers
  remote_user: root
  vars:
    tomcat_versions:
      jessie: "tomcat7"
      stretch: "tomcat8"
      buster: "tomcat9"
    tomcat_owner: "{{tomcat_owners[ansible_lsb.codename]}}"
    tomcat_group: "{{tomcat_owners[ansible_lsb.codename]}}"
    tomcatN: "{{tomcat_versions[ansible_lsb.codename]}}"

  pre_tasks:
    - name: Require Debian
      assert:
        that:
          - ansible_distribution == "Debian"
          - ansible_distribution_major_version in ["9","10"]
        msg: "Only Debian 9+ is supported"
    - name: "get package facts"
      package_facts:
        manager: "apt"
    - name: "find postgresql-11"
      when: "'postgresql-11' in ansible_facts.packages"
      set_fact:
        postgresql_package: "postgresql-11"
    - name: "find postgresql-12"
      when: "'postgresql-12' in ansible_facts.packages"
      set_fact:
        postgresql_package: "postgresql-12"
    - name: "assert some postgres"
      assert:
        that: postgresql_package is defined
    - debug:
        var: postgresql_package
    - debug:
        var: tomcatN
  tasks:
    - name: "get service facts"
      service_facts:
    - name: "get ldapc service status"
      set_fact:
        ldapc_should_run: "{{ansible_facts.services['perun-ldapc'].state == 'running'}}"
    - name: "stop perun-ldapc service"
      service:
        name: perun-ldapc
        state: stopped
    - name: "stop tomcat service"
      service:
        name: "{{ tomcatN }}"
        state: stopped
    - name: "Unhold package {{ postgresql_package }} from upgrading"
      dpkg_selections:
        name: "{{ postgresql_package }}"
        selection: install
    - name: "upgrade {{ postgresql_package }}"
      apt:
        name: "{{ postgresql_package }}"
        state: latest
    - name: "Hold package {{ postgresql_package }} from upgrading"
      dpkg_selections:
        name: "{{ postgresql_package }}"
        selection: hold
    - name: "start tomcat service"
      service:
        name: "{{ tomcatN }}"
        state: started
    - name: "start perun-ldapc"
      when: ansible_facts.services['perun-ldapc'] is defined and ldapc_should_run
      service:
        name: perun-ldapc
        state: started
