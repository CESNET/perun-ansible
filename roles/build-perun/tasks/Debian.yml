---
# Debian installation of packages
- name: Ensure prerequisites
  package:
    name: "{{ item }}"
    state: present
  with_items: "{{prerequisites[ansible_os_family]}}"

- name: Copy ojdbc8 file to remote server
  copy:
    src: "{{ ojdbc8_file_path }}"
    dest: "/home/{{ perun_login }}/ojdbc8.jar"
    owner: "{{ perun_login }}"
    group: "{{ perun_group }}"
    mode: 0644
  when: install_oracle

- name: Copy orai18n file to remote server
  copy:
    src: "{{ orai18n_file_path }}"
    dest: "/home/{{ perun_login }}/orai18n.jar"
    owner: "{{ perun_login }}"
    group: "{{ perun_group }}"
    mode: 0644
  when: install_oracle

- name: Install ojdbc8
  become: yes
  become_user: "{{ perun_login }}"
  command: mvn install:install-file -Dfile=ojdbc8.jar -DgroupId=com.oracle -DartifactId=ojdbc8 -Dversion=12.2.0.1.0 -Dpackaging=jar
  args:
    chdir: "/home/{{ perun_login }}"
  when: install_oracle

- name: Install orai18n
  become: yes
  become_user: "{{ perun_login }}"
  command: mvn install:install-file -Dfile=orai18n.jar -DgroupId=com.oracle -DartifactId=orai18n -Dversion=12.2.0.1.0 -Dpackaging=jar
  args:
    chdir: "/home/{{ perun_login }}"
  when: install_oracle

- name: "Build all perun components. WARNING: THIS CAN TAKE SEVERAL MINUTES!"
  become: yes
  become_user: "{{ perun_login }}"
  shell: "mvn -T {{ maven_parallel_build_threads | default(1) }} install -Dproduction > out.log"
  args:
    chdir: "{{ perun_folder }}"
    creates: "{{perun_folder}}/target/perun-web-gui-production.war"
  register: perun_build
  async: 600
  poll: 5

- name: Debug build output
  debug:
    var: perun_build.stderr

- name: Copy perun-rpc.war file into tomcat webapps folder
  command: cp perun-rpc.war "/var/lib/tomcat8/webapps/perun-rpc.war"
  args:
    chdir: "{{ perun_folder }}/perun-rpc/target/"

- name: Change rights on perun-rpc.war file
  file:
    path: /var/lib/tomcat8/webapps/perun-rpc.war
    owner: tomcat8
    group: tomcat8
    mode: 0644

- name: Delete /var/www/perun-web-gui
  file:
    path: "/var/www/perun-web-gui"
    state: absent

- name: Deploy GUI
  command: cp -r ./perun-web-gui-3.0.1-SNAPSHOT-production /var/www/perun-web-gui
  args:
    chdir: "{{ perun_folder }}/perun-web-gui/target/"

- name: Change owner of /var/www/perun-web-gui directory and its content to user perun
  file:
    path: /var/www/perun-web-gui
    state: directory
    owner: "{{ perun_login }}"
    group: "{{ perun_login }}"
    recurse: yes

- name: Sets rights on /var/www/perun-web-gui directory
  file:
    path: /var/www/perun-web-gui
    state: directory
    mode: 0755

- name: Start Tomcat if its not running
  become: true
  service:
    state: started
    name: tomcat8
