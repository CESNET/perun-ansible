---
# Task file for installation of LDAP in Debian distribution

- name: Configure domain for OpenLDAP
  debconf:
    name: 'slapd'
    question: '{{ item }}'
    vtype: 'string'
    value: '{{ slapd_domain }}'
  with_items: [ 'slapd/domain', 'shared/organization' ]

- name: Configure database backend for OpenLDAP in debconf
  debconf:
    name: 'slapd'
    question: 'slapd/backend'
    vtype: 'string'
    value: 'MDB'

- name: Install prerequisites
  package:
    name: "{{ item }}"
    state: present
  with_items: "{{prerequisites[ansible_distribution]}}"

- name: Hold packages from upgrading
  dpkg_selections:
    name: slapd
    selection: hold

- name: Generate the root password for ldap
  shell: slappasswd -s {{ password_ldap_data_tree }}
  register: root_password

- name: Generate the password for config admin
  shell: slappasswd -s {{ password_ldap_config }}
  register: config_admin_password_hash

- name: Set up admin to manage config
  ldap_attr:
    dn: olcDatabase={0}config,cn=config
    name: "{{ item.key }}"
    values: "{{ item.value }}"
    state: exact
  with_dict:
    olcRootPW: "{{ config_admin_password_hash.stdout }}"
  notify: Restart LDAP

- name: Set up admin to manage data tree
  ldap_attr:
    dn: olcDatabase={1}mdb,cn=config
    name: "{{ item.key }}"
    values: "{{ item.value }}"
    state: exact
  with_dict:
    olcSuffix: "{{ slapd_basedn }}"
    olcRootDN: "{{ slapd_basedn_admin }}"
    olcRootPW: "{{ root_password.stdout }}"
  notify: Restart LDAP

- name: Add openldap user to ssl-cert group
  user:
    name: openldap
    groups: ssl-cert
    append: yes

- name: Restart LDAP
  service:
    name: slapd
    state: restarted

- name: Create file for modifying LDAP TLS settings
  copy:
    dest: "/etc/ldap/ssl.ldif"
    content: |
      dn: cn=config
      changetype: modify
      replace: olcTLSCertificateFile
      olcTLSCertificateFile: {{ ldap_certificate_file }}
      -
      replace: olcTLSCertificateKeyFile
      olcTLSCertificateKeyFile: {{ ldap_certificate_key_file }}
      -
      replace: olcTLSCACertificateFile
      olcTLSCACertificateFile: {{ ldap_ca_certificate_file }}
      -

  register: ssl_ldif

- name: Change TLS settings
  command: /usr/bin/ldapmodify -Q -H ldapi:/// -Y EXTERNAL -f /etc/ldap/ssl.ldif
  when: ssl_ldif.changed

- name: Enable secure port in /etc/default/slapd
  lineinfile:
   dest: /etc/default/slapd
   regexp: ^SLAPD_SERVICES=
   line: SLAPD_SERVICES="ldaps:/// ldapi:/// ldap://127.0.0.1/"
  register: secure_port_enabled

- name: Restart LDAP after enabling TLS
  service:
    name: slapd
    state: restarted
  when: secure_port_enabled.changed or ssl_ldif.changed

- name: Create file for modifying LDAP access rights
  copy:
    dest: "/etc/ldap/access.ldif"
    content: |
      dn: olcDatabase={1}mdb,cn=config
      changetype: modify
      replace: olcAccess
      olcAccess: {0}to attrs=userPassword by self write by anonymous auth by * none
      olcAccess: {1}to attrs=shadowLastChange by self write by * read
      olcAccess: {2}to * by self read by * break
      olcAccess: {3}to * by users search by * break
      -

  register: access_ldif

- name: Change LDAP access rights
  command: /usr/bin/ldapmodify -Q -H ldapi:/// -Y EXTERNAL -f /etc/ldap/access.ldif
  when: access_ldif.changed
  notify: Restart LDAP

- name: Create perun schema entry
  ldap_entry:
    dn: cn={4}perun,cn=schema,cn=config
    objectClass: olcSchemaConfig
  register: perun_schema

- name: Set up perun schema attributes
  command: "/usr/bin/ldapmodify -Q -H ldapi:/// -Y EXTERNAL -f  {{perun_folder}}/perun-utils/ldapc-scripts/schemas/perun-schema.ldif"
  when: perun_schema.changed

- name: Create inetUser schema entry
  ldap_entry:
    dn: cn={5}inetUser,cn=schema,cn=config
    objectClass: olcSchemaConfig
  register: inetUser_schema

- name: Set up inetUser schema attributes
  command: "/usr/bin/ldapmodify -Q -H ldapi:/// -Y EXTERNAL -f  {{perun_folder}}/perun-utils/ldapc-scripts/schemas/inetUser-schema.ldif"
  when: inetUser_schema.changed

- name: Create tenOperEntry schema entry
  ldap_entry:
    dn: cn={6}tenOperEntry,cn=schema,cn=config
    objectClass: olcSchemaConfig
  register: tenOperEntry_schema

- name: Set up tenOperEntry schema attributes
  command: "/usr/bin/ldapmodify -Q -H ldapi:/// -Y EXTERNAL -f  {{perun_folder}}/perun-utils/ldapc-scripts/schemas/tenOperEntry-schema.ldif"
  when: tenOperEntry_schema.changed

- name: Set olcAttributeOptions attribute
  ldap_attr:
    dn: cn=config
    name: "olcAttributeOptions"
    values: "x-ns-"
    state: exact

- name: Set indexes (olcDbIndex attribute)
  ldap_attr:
    dn: olcDatabase={1}mdb,cn=config
    name: olcDbIndex
    values: "{{ item }}"
    state: present
  with_items:
    - cn,uid eq
    - uidNumber,gidNumber eq
    - member,memberUid eq
    - uniqueMember eq
    - perunVoId eq
    - eduPersonPrincipalNames eq
    - entryCSN,entryUUID eq
    - login eq
    - memberOfPerunVo eq
    - userCertificateSubject eq
    - entityID eq
    - assignedToResourceId eq
  notify: Restart LDAP

- name: Change o attribute to perun in root dn
  ldap_attr:
    dn: "{{ slapd_basedn }}"
    name: o
    values: perun
    state: exact
    bind_dn: "{{ slapd_basedn_admin }}"
    bind_pw: "{{ password_ldap_data_tree }}"
