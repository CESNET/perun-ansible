---
# Task file for perun role for Debian OS family (Debian or Ubuntu)

- name: Require Debian 8
  assert:
    that:
      - ansible_distribution == "Debian"
      - ansible_distribution_major_version == "8"
    msg: "Only Debian 8 is supported"

- name: Add Oracle java repository key
  apt_key:
    keyserver: hkp://keyserver.ubuntu.com:80
    id: EEA14886
    state: present

- name: Add Oracle java repository
  apt_repository:
    repo: 'deb http://ppa.launchpad.net/webupd8team/java/ubuntu trusty main'
    filename: 'webupd8team-java'
    state: present

- name: Accept Oracle licence
  debconf:
    name: 'oracle-java8-installer'
    question: 'shared/accepted-oracle-license-v1-1'
    value: 'true'
    vtype: 'select'

- name: Add backports repository
  apt_repository:
    repo: 'deb http://http.debian.net/debian jessie-backports main'
    filename: 'jessie-backports'
    state: present
  when: ansible_distribution == "Debian" and ansible_distribution_major_version == "8"

- name: Run the equivalent of "apt-get update" as a separate step
  apt:
    update_cache: yes
    cache_valid_time: 900

- name: Install prerequisites
  package:
    name: "{{ prerequisites[ansible_os_family]}}"
    state: latest

- name: Install Java8
  apt:
    name: "{{ java[ansible_os_family]}}"
    state: latest

- name: Install Maven from backports
  apt:
    name: maven
    default_release: jessie-backports
    state: latest
  when: ansible_distribution == "Debian" and ansible_distribution_major_version == "8"

- name: Install Maven
  apt:
    name: maven
    state: latest
  when: ansible_distribution == "Debian" and ansible_distribution_major_version == "9"

- name: Generate the hash of user's password (SHA-512)
  shell: mkpasswd -m sha-512 "{{ password_user | default (lookup('password')) }}"
  register: password_user_hash

- name: "Create {{ perun_login }} user"
  user:
    name: "{{ perun_login }}"
    comment: "{{ perun_name }}"
    password: "{{ password_user_hash.stdout }}"
    shell: /bin/bash
    update_password: always

- name: "Add {{ perun_login }} user to sudoers"
  lineinfile:
    dest: /etc/sudoers
    state: present
    regexp: "^%{{ perun_login }}"
    line: "%{{ perun_login }} ALL=(ALL:ALL) ALL"

- name: Clone git repository of perun sources to remote server
  become: yes
  become_user: "{{ perun_login }}"
  git:
    repo: https://github.com/CESNET/perun.git
    dest: "{{ perun_folder }}"
    version: production
    update: yes

- name: Clone git repository of perun services to remote server
  become: yes
  become_user: "{{ perun_login }}"
  git:
    repo: https://github.com/CESNET/perun-services.git
    dest: "{{ perun_services_folder }}"
    version: production
    update: yes
